{"version":3,"file":"static/js/872.fc5ed2fe.chunk.js","mappings":"qYA0DA,EAnDyB,WACvB,OAA8BA,EAAAA,EAAAA,GAAUC,EAAAA,cAAe,CACrDC,EACAC,IACA,eAHMC,EAAS,KAAEC,EAAM,KAezB,OAVAC,EAAAA,EAAAA,YAAU,WACR,CAACD,EAAQD,GAAWG,SAAQ,SAAAC,GAC1BA,EAAEC,MAAQC,EAAAA,eACVF,EAAEG,MAAQD,EAAAA,eACVF,EAAEI,OAAOC,IAAI,EAAG,EAClB,IAEAR,EAAOS,SAAWC,EAAAA,cACpB,GAAG,CAACX,EAAWC,KAGb,+BAKE,kBAAM,aAAuB,IAAVW,KAAKC,GAAUC,YAAU,EAACC,eAAa,aACxD,0BAAeC,KAAM,CAAC,GAAI,OAC1B,SAACC,EAAA,EAAqB,CACpBC,gBAAiB,EACjBC,UAAWlB,EAGXmB,aAAcpB,EACdqB,WAAW,EACXC,MAAO,CAAC,KAAO,KAAO,MACtBtB,UAAW,GACXuB,KAAM,CAAC,IAAM,KACbC,QAAS,GACTC,YAAa,GACbC,YAAa,EACbC,WAAY,KACZC,OAAQ,EACRC,WAAY,IACZC,kBAAmB,GACnBC,kBAAmB,EACnBC,qBAAsB,IAEtBC,gBAAiB,SAK3B,EClDMC,EAAoB,WACxB,OACE,iCACE,SAACC,EAAA,EAAa,CAACC,OAAQ,CAAC,EAAG,IAAM,GAAIC,cAAe,QAEpD,SAACC,EAAA,EAAiB,CAACC,aAAW,EAACC,IAAK,GAAIC,SAAU,CAAC,EAAG,EAAG,MAEzD,kBAAOzB,KAAM,CAAC,EAAG,EAAG,GAAI0B,OAAO,gBAI/B,sBACEpB,MAAO,CAAC,EAAG,IAAM,IACjBqB,UAAW,IACXC,MAAO,GACPC,SAAU,GACVJ,SAAU,CAAC,EAAG,EAAG,GACjB3B,YAAU,EACV,eAAc,QAGhB,sBACEQ,MAAO,CAAC,IAAM,GAAK,GACnBqB,UAAW,EACXC,MAAO,GACPC,SAAU,GACVJ,SAAU,EAAE,EAAG,EAAG,GAClB3B,YAAU,EACV,eAAc,QAGhB,SAAC,EAAM,MAGb,EAUA,EARyB,WACvB,OACE,SAAC,KAAM,CAACgC,SAAO,YACb,SAACZ,EAAO,KAGd,C","sources":["pages/Canvas/Test2/Ground.tsx","pages/Canvas/Test2/index.tsx"],"sourcesContent":["import React, { useEffect } from 'react'\r\nimport { MeshReflectorMaterial } from '@react-three/drei'\r\nimport { useLoader } from '@react-three/fiber'\r\nimport { LinearEncoding, RepeatWrapping, TextureLoader } from 'three'\r\nimport RoughnessImg from '../models/background/terrain-roughness.jpg'\r\nimport NormalImg from '../models/background/terrain-normal.jpg'\r\n\r\nconst Ground: React.FC = () => {\r\n  const [ roughness, normal ] = useLoader(TextureLoader, [\r\n    RoughnessImg,\r\n    NormalImg\r\n  ])\r\n\r\n  useEffect(() => {\r\n    [normal, roughness].forEach(t => {\r\n      t.wrapS = RepeatWrapping\r\n      t.wrapT = RepeatWrapping\r\n      t.repeat.set(5, 5)\r\n    })\r\n\r\n    normal.encoding = LinearEncoding\r\n  }, [roughness, normal])\r\n\r\n  return (\r\n    <>\r\n      {/* <mesh>\r\n        <boxGeometry args={[1, 1, 1]}/>\r\n        <meshBasicMaterial color={'red'}/>\r\n      </mesh> */}\r\n      <mesh rotation-x={-Math.PI * 0.5} castShadow receiveShadow>\r\n        <planeGeometry args={[30, 30]}/>\r\n        <MeshReflectorMaterial\r\n          envMapIntensity={0}\r\n          normalMap={normal}\r\n          // normalScale={undefined}\r\n          // normalScale={[0.15, 0.15]}\r\n          roughnessMap={roughness}\r\n          dithering={true}\r\n          color={[0.015, 0.015, 0.015]}\r\n          roughness={0.7}\r\n          blur={[1000, 400]}\r\n          mixBlur={30}\r\n          mixStrength={80} \r\n          mixContrast={1} \r\n          resolution={1024}\r\n          mirror={0}\r\n          depthScale={0.01}\r\n          minDepthThreshold={0.9}\r\n          maxDepthThreshold={1}\r\n          depthToBlurRatioBias={0.25}\r\n          // debug={0}\r\n          reflectorOffset={0.2}\r\n        />\r\n      </mesh>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Ground","import React from 'react'\r\nimport { Canvas } from '@react-three/fiber'\r\nimport { OrbitControls, PerspectiveCamera } from '@react-three/drei'\r\nimport Ground from './Ground'\r\n// import Car from './Car'\r\n\r\nconst CarShow: React.FC = () => {\r\n  return (\r\n    <>\r\n      <OrbitControls target={[0, 0.35, 0]} maxPolarAngle={1.45} />\r\n\r\n      <PerspectiveCamera makeDefault fov={50} position={[3, 2, 5]} />\r\n\r\n      <color args={[0, 0, 0]} attach=\"background\" />\r\n\r\n      {/* <Car /> */}\r\n\r\n      <spotLight \r\n        color={[1, 0.25, 0.7]}\r\n        intensity={1.5}\r\n        angle={0.6}\r\n        penumbra={0.5}\r\n        position={[5, 5, 0]}\r\n        castShadow\r\n        shadow-bias={-0.0001}\r\n      />\r\n\r\n      <spotLight \r\n        color={[0.14, 0.5, 1]}\r\n        intensity={2}\r\n        angle={0.6}\r\n        penumbra={0.5}\r\n        position={[-5, 5, 0]}\r\n        castShadow\r\n        shadow-bias={-0.0001}\r\n      />\r\n\r\n      <Ground />\r\n    </>\r\n  )\r\n}\r\n\r\nconst Test1: React.FC  = () => {\r\n  return (\r\n    <Canvas shadows>\r\n      <CarShow />\r\n    </Canvas>\r\n  )\r\n}\r\n\r\nexport default Test1"],"names":["useLoader","TextureLoader","RoughnessImg","NormalImg","roughness","normal","useEffect","forEach","t","wrapS","RepeatWrapping","wrapT","repeat","set","encoding","LinearEncoding","Math","PI","castShadow","receiveShadow","args","MeshReflectorMaterial","envMapIntensity","normalMap","roughnessMap","dithering","color","blur","mixBlur","mixStrength","mixContrast","resolution","mirror","depthScale","minDepthThreshold","maxDepthThreshold","depthToBlurRatioBias","reflectorOffset","CarShow","OrbitControls","target","maxPolarAngle","PerspectiveCamera","makeDefault","fov","position","attach","intensity","angle","penumbra","shadows"],"sourceRoot":""}