{"version":3,"file":"static/js/156.8bdef9a8.chunk.js","mappings":"sVAQaA,EAA2B,CACtC,CACEC,GAAI,EACJC,SAAU,QACVC,MAAO,qBACPC,QAAS,2BACTC,IAAK,IAEP,CACEJ,GAAI,EACJC,SAAU,WACVC,MAAO,2BACPC,QAAS,yBACTC,IAAK,IAEP,CACEJ,GAAI,EACJC,SAAU,WACVC,MAAO,2BACPC,QAAS,yBACTC,IAAK,IAEP,CACEJ,GAAI,EACJC,SAAU,UACVC,MAAO,0BACPC,QAAS,yBACTC,IAAK,IAEP,CACEJ,GAAI,EACJC,SAAU,QACVC,MAAO,wBACPC,QAAS,yBACTC,IAAK,IAEP,CACEJ,GAAI,EACJC,SAAU,UACVC,MAAO,uBACPC,QAAS,yBACTC,IAAK,IAEP,CACEJ,GAAI,EACJC,SAAU,OACVC,MAAO,6BACPC,QAAS,yBACTC,IAAK,IAEP,CACEJ,GAAI,EACJC,SAAU,MACVC,MAAO,6BACPC,QAAS,yBACTC,IAAK,IAEP,CACEJ,GAAI,EACJC,SAAU,SACVC,MAAO,6BACPC,QAAS,0BACTC,IAAK,IAEP,CACEJ,GAAI,GACJC,SAAU,MACVC,MAAO,uBACPC,QAAS,2BACTC,IAAK,IAEP,CACEJ,GAAI,GACJC,SAAU,MACVC,MAAO,qBACPC,QAAS,2BACTC,IAAK,KCzEIC,EAAa,SAACJ,EAAkBG,EAAaF,EAAeC,GACvE,OAAOG,EAAAA,EAAAA,GAAgB,CACrBC,IAAK,cACLC,OAAQ,OACRC,KAAM,CAAER,SAAAA,EAAUC,MAAAA,EAAOE,IAAAA,EAAKD,QAAAA,IAC7B,EACL,EAgBaO,EAAa,SAACC,EAAgBV,EAAkBG,EAAaF,EAAeC,GACvF,OAAOG,EAAAA,EAAAA,GAAgB,CACrBC,IAAK,cACLC,OAAQ,OACRC,KAAM,CAAEE,OAAAA,EAAQV,SAAAA,EAAUG,IAAAA,EAAKD,QAAAA,IAC9BQ,EACL,E,SCrBMC,EAAa,CACjBC,WAAY,CAAEC,OAAQ,GAAIC,KAAM,IA+FlC,EA5FoC,SAAH,GAAgD,IAA1CC,EAAM,EAANA,OAAQC,EAAS,EAATA,UAAWC,EAAe,EAAfA,gBACxD,EAAqBC,EAAAA,EAAAA,UAAdC,GAAsC,YAA5B,GAEXC,EAAQ,yCAAG,WAAOC,GAAgB,0FACoB,OADpB,EACyBA,EAAvDrB,SAAAA,OAAQ,MAAG,GAAE,IAA0CqB,EAAvClB,IAAAA,OAAG,MAAG,GAAE,IAA+BkB,EAA7BpB,MAAAA,OAAK,MAAG,GAAE,IAAmBoB,EAAjBnB,QAAAA,OAAO,MAAG,GAAE,WAEpDE,EAAWJ,EAAUG,EAAKF,EAAOC,GAASoB,MAAK,SAAAC,GACnD,MAAuBA,EAAfC,EAAI,EAAJA,KAAMC,EAAG,EAAHA,IACD,MAATD,GACFE,EAAAA,GAAAA,QAAgBD,GAElBE,QAAQC,IAAIL,EACd,IAAE,OACFJ,EAAWU,cACXb,GAAU,GACVC,GAAgB,SAACa,GAAgB,OAAKA,EAAW,CAAC,IAAC,2CACpD,gBAba,sCAuBd,OACE,SAAC,IAAK,CACJC,aAAW,EACXC,MAAM,iCACNC,KAAMlB,EACNmB,SATiB,WACnBlB,GAAU,EACZ,EAQImB,OAAQ,GAAG,UAEX,UAAC,IAAI,CACHC,KAAK,QACLC,KAAMlB,EACNmB,SAAU,CAAExB,KAAM,GAClBF,WAAY,CAAEE,KAAM,IACpByB,MAAO,CAAEC,SAAU,KACnBC,cAAe,CAAEC,UAAU,GAC3BtB,SAAUA,EACVuB,eAxBiB,SAACC,GACtBjB,QAAQC,IAAI,UAAWgB,EACzB,EAuBMC,aAAa,MAAK,WAElB,SAAC,SAAS,CACRC,MAAM,WACNV,KAAK,WACLW,MAAO,CAAC,CAAEC,UAAU,EAAMtB,QAAS,gCAAiC,UAEpE,SAAC,IAAK,OAGR,SAAC,SAAS,CACRoB,MAAM,MACNV,KAAK,MACLW,MAAO,CAAC,CAAEC,UAAU,IAAS,UAE7B,SAAC,IAAK,OAGR,SAAC,SAAS,CACRF,MAAM,SACNV,KAAK,QACLW,MAAO,CAAC,CAAEC,UAAU,IAAS,UAE7B,SAAC,IAAK,OAGR,SAAC,SAAS,CACRF,MAAM,UACNV,KAAK,UACLW,MAAO,CAAC,CAAEC,UAAU,IAAS,UAE7B,SAAC,IAAK,OAGR,SAAC,UAAS,kBAAKrC,GAAU,cACvB,UAAC,IAAK,YACJ,SAAC,KAAM,CAACsC,KAAK,UAAUC,SAAS,QAAO,SAAC,WAGxC,SAAC,KAAM,CAACD,KAAK,UAAUC,SAAS,SAAQ,SAAC,qBAQrD,EC5FMvC,EAAa,CACjBC,WAAY,CAAEC,OAAQ,GAAIC,KAAM,IAwGlC,EArGoC,SAAH,GAAmE,IAA7DJ,EAAM,EAANA,OAAQyC,EAAS,EAATA,UAAWpC,EAAM,EAANA,OAAQC,EAAS,EAATA,UAAWC,EAAe,EAAfA,gBAC3E,EAAqBC,EAAAA,EAAAA,UAAdkC,GAAsC,YAA5B,IAEjBC,EAAAA,EAAAA,YAAU,YFRW,SAAC3C,GACtB,OAAOL,EAAAA,EAAAA,GAAsB,CAC3BC,IAAK,WACLC,OAAQ,OACRC,KAAM,CAAEE,OAAAA,IACP,CACDX,GAAI,EACJC,SAAU,QACVC,MAAO,qBACPC,QAAS,2BACTC,IAAK,IAET,EEHImD,CAAQ5C,GAAQY,MAAK,SAAAC,GACnB,IACA,EADkBA,EAAVf,KACAR,EAAQ,EAARA,SAAUG,EAAG,EAAHA,IAAKF,EAAK,EAALA,MAAOC,EAAO,EAAPA,QAC9BkD,EAAWG,eAAe,CAAEvD,SAAAA,EAAUG,IAAAA,EAAKF,MAAAA,EAAOC,QAAAA,GACpD,GACF,GAAG,CAACQ,IAEJ,IAAMU,EAAQ,yCAAG,WAAOC,GAAgB,wFACoB,OADpB,EACyBA,EAAvDrB,SAAAA,OAAQ,MAAG,GAAE,IAA0CqB,EAAvClB,IAAAA,OAAG,MAAG,GAAE,IAA+BkB,EAA7BpB,WAAK,MAAG,GAAE,IAAmBoB,EAAjBnB,QAAAA,OAAO,MAAG,GAAE,WAEpDO,EAAWC,EAAQV,EAAUG,EAAKF,EAAOC,GAASoB,MAAK,SAAAC,GAC3D,MAAuBA,EAAfC,EAAI,EAAJA,KAAMC,EAAG,EAAHA,IACD,MAATD,GACFE,EAAAA,GAAAA,QAAgBD,GAElBE,QAAQC,IAAIL,EACd,IAAE,OACF6B,EAAWvB,cACXsB,EAAU,GACVnC,GAAU,GACVC,GAAgB,SAACa,GAAgB,OAAKA,EAAW,CAAC,IAAC,2CACpD,gBAda,sCAwBd,OACE,SAAC,IAAK,CACJC,aAAW,EACXC,MAAM,iCACNC,KAAMlB,EACNmB,SATiB,WACnBlB,GAAU,EACZ,EAQImB,OAAQ,GAAG,UAEX,UAAC,IAAI,CACHC,KAAK,QACLC,KAAMe,EACNd,SAAU,CAAExB,KAAM,GAClBF,WAAY,CAAEE,KAAM,IACpByB,MAAO,CAAEC,SAAU,KACnBC,cAAe,CAAEC,UAAU,GAC3BtB,SAAUA,EACVuB,eAxBiB,SAACC,GACtBjB,QAAQC,IAAI,UAAWgB,EACzB,EAuBMC,aAAa,MAAK,WAElB,SAAC,SAAS,CACRC,MAAM,WACNV,KAAK,WACLW,MAAO,CAAC,CAAEC,UAAU,EAAMtB,QAAS,gCAAiC,UAEpE,SAAC,IAAK,OAGR,SAAC,SAAS,CACRoB,MAAM,MACNV,KAAK,MACLW,MAAO,CAAC,CAAEC,UAAU,IAAS,UAE7B,SAAC,IAAK,OAGR,SAAC,SAAS,CACRF,MAAM,SACNV,KAAK,QACLW,MAAO,CAAC,CAAEC,UAAU,IAAS,UAE7B,SAAC,IAAK,OAGR,SAAC,SAAS,CACRF,MAAM,UACNV,KAAK,UACLW,MAAO,CAAC,CAAEC,UAAU,IAAS,UAE7B,SAAC,IAAK,OAGR,SAAC,UAAS,kBAAKrC,GAAU,cACvB,UAAC,IAAK,YACJ,SAAC,KAAM,CAACsC,KAAK,UAAUC,SAAS,QAAO,SAAC,WAGxC,SAAC,KAAM,CAACD,KAAK,UAAUC,SAAS,SAAQ,SAAC,qBAQrD,ECvGQM,EAAYC,EAAAA,EAAAA,QAkJpB,EAhJuB,WAErB,OAAoBC,EAAAA,EAAAA,UAAS,GAArBC,GAAuB,YAAhB,GAGf,GAAwCD,EAAAA,EAAAA,UAAS,GAAE,eAA5CE,EAAY,KAAE3C,EAAe,KAEpC,GAAkCyC,EAAAA,EAAAA,UAAqB,IAAG,eAAnDG,EAAS,KAAEC,EAAY,MAE9BT,EAAAA,EAAAA,YAAU,YH5Be,SAACM,EAAiBI,GAC3C,OAAO1D,EAAAA,EAAAA,GAAwB,CAC7BC,IAAK,eACLC,OAAQ,OACRC,KAAM,CAAEmD,QAAAA,EAASI,SAAAA,IAChBjE,EACL,EGuBIkE,CAAYL,EAPG,IAOgBrC,KAAI,yCAAC,WAAMC,GAAQ,kFACxCC,GADwC,EACxBD,GAAhBC,KAAMhB,EAAI,EAAJA,KACD,MAATgB,IACIyC,EAAWzD,EAAK0D,KAAI,SAACC,GACzB,OAAO,kBACFA,GAAI,IACPC,IAAKD,EAAKpE,IAEd,IACA+D,GAAa,yBAASG,EAAQ,KAC/B,2CACF,mDAXkC,GAYrC,GAAG,CAACL,IAEJ,OAAwCF,EAAAA,EAAAA,WAAS,GAAM,eAAhDW,EAAY,KAAEC,EAAe,KACpC,GAAwCZ,EAAAA,EAAAA,WAAS,GAAM,eAAhDa,EAAY,KAAEC,EAAe,KAEpC,GAA4Bd,EAAAA,EAAAA,UAAS,GAAE,eAAhCe,EAAM,KAAEtB,EAAS,KAUlBuB,EAAa,SAACC,GAClB,IAAYjE,EAAqBiE,EAAzB5E,GAAYC,EAAa2E,EAAb3E,SACpBwD,EAAQ,CACNoB,MAAM,SAACC,EAAA,EAAyB,IAChCC,SAAS,2BAAK,4BAAM9E,KACpB+E,KAAI,YHvBgB,SAACrE,GACzB,OAAOL,EAAAA,EAAAA,GAAiB,CACtBC,IAAK,cACLC,OAAQ,OACRC,KAAM,CAAEE,OAAAA,KACP,EACL,EGkBQsE,CAAWtE,GAAQY,MAAK,SAAAC,GACtB,MAAuBA,EAAfC,EAAI,EAAJA,KAAMC,EAAG,EAAHA,IACD,MAATD,GACFE,EAAAA,GAAAA,QAAgBD,GAElBE,QAAQC,IAAIL,EACd,GACF,EACAW,SAAQ,WAAI,GAEhB,EAEM+C,EAAiC,CACrC,CACEjD,MAAO,WACPkD,MAAO,GACPC,UAAW,WACXf,IAAK,YAEP,CACEpC,MAAO,MACPkD,MAAO,GACPC,UAAW,MACXf,IAAK,OAEP,CACEpC,MAAO,SACPkD,MAAO,GACPC,UAAW,QACXf,IAAK,SAEP,CACEpC,MAAO,UACPkD,MAAO,IACPC,UAAW,UACXf,IAAK,WAEP,CACEpC,MAAO,SACPkD,MAAO,GACPC,UAAW,SACXf,IAAK,SACLgB,MAAO,QACPC,OAAQ,SAACC,EAAQX,GAAgB,OAC/B,UAAC,IAAK,CAACY,KAAK,SAAQ,WAClB,SAAC,KAAM,CACLtC,KAAK,UACL2B,MAAM,SAACY,EAAA,EAAY,IACnBC,QAAS,kBA1DA,SAACd,GAClBxB,EAAUwB,EAAO5E,IACjByE,GAAgB,EAClB,CAuDyBkB,CAAWf,EAAO,EAAC,SACnC,YAGD,SAAC,KAAM,CACL1B,KAAK,UACL0C,QAAM,EACNf,MAAM,SAACgB,EAAA,EAAc,IACrBH,QAAS,kBAAMf,EAAWC,EAAO,EAAC,SACnC,aAGK,IAKd,OACE,iBAAKkB,UAAU,iBAAgB,WAE7B,gBAAKA,UAAU,WAAU,UACvB,SAAC,KAAM,CACL5C,KAAK,UACL2B,MAAM,SAACkB,EAAA,EAAe,IACtBL,QAtFW,WACjBnB,GAAgB,EAClB,EAoF4B,SACrB,cAIH,SAAC,EAAM,CACLvD,OAAQsD,EACRrD,UAAWsD,EACXrD,gBAAiBA,KAEnB,SAAC8E,EAAM,CACLrF,OAAQ+D,EACRtB,UAAWA,EACXpC,OAAQwD,EACRvD,UAAWwD,EACXvD,gBAAiBA,KAGnB,SAAC,IAAK,CACJ+E,WAAYnC,EACZgC,UAAU,aACVZ,QAASA,EACTgB,OAAQ,CAAEC,EAAG,KACbC,WAAY,CAAEpC,SAvIH,QA2InB,C,0DC1JMqC,E,QAAWC,EAAAA,OAAa,CAE5BC,QAAS,uCACTC,QAAS,IACTC,QAAS,CAEP,eAAgB,oCAQpBJ,EAASK,aAAapG,QAAQqG,KAC5B,SAACC,GAMC,OALAA,EAAOH,QAAUG,EAAOH,SAAW,CAAC,EAChCI,aAAaC,QAAQ,WACvBF,EAAOH,QAAQM,MAAQF,aAAaC,QAAQ,UAAY,IAGnDF,CACT,IACA,SAACI,GACC,OAAOC,QAAQC,OAAOF,EACxB,IAGFX,EAASK,aAAalF,SAASmF,KAC7B,SAACnF,GAGC,OAAY,MAFSA,EAAS2F,OAGrBF,QAAQC,OAAO1F,EAASf,MAG1Be,CACT,IACA,SAACwF,GACC,OAAOC,QAAQC,OAAOF,EACxB,IAUF,IAAM1G,EAAU,SAAIsG,EAA4B7G,GAAyF,IAA5EqH,EAAU,wDACrE,OAAIA,EAQKf,EAASO,GAPTK,QAAQI,QAAQ,CACrB5G,KAAMV,EACN0B,KAAM,IACN0F,OAAQ,IACRzF,IAAK,WAKX,C","sources":["api/user/fakeData.ts","api/user/index.ts","pages/User/Create.tsx","pages/User/Update.tsx","pages/User/index.tsx","utils/request.ts"],"sourcesContent":["export interface fakeDataType {\r\n  id: number\r\n  username: string\r\n  email: string\r\n  address: string\r\n  age: number\r\n}\r\n\r\nexport const fakeData: fakeDataType[] = [\r\n  {\r\n    id: 1,\r\n    username: 'admin',\r\n    email: 'admin123@gmail.com',\r\n    address: 'New York No. 1 Lake Park',\r\n    age: 21\r\n  },\r\n  {\r\n    id: 2,\r\n    username: 'JimGreen',\r\n    email: 'jimGreen564223@gmail.com',\r\n    address: 'London No. 1 Lake Park',\r\n    age: 30\r\n  },\r\n  {\r\n    id: 3,\r\n    username: 'JoeBlack',\r\n    email: 'joeBlack445887@gmail.com',\r\n    address: 'Sydney No. 1 Lake Park',\r\n    age: 27\r\n  },\r\n  {\r\n    id: 4,\r\n    username: 'josnTem',\r\n    email: 'josnTem445447@gmail.com',\r\n    address: 'Sydney No. 2 Lake Park',\r\n    age: 43\r\n  },\r\n  {\r\n    id: 5,\r\n    username: 'kynic',\r\n    email: 'kynic445887@gmail.com',\r\n    address: 'Sydney No. 3 Lake Park',\r\n    age: 54\r\n  },\r\n  {\r\n    id: 6,\r\n    username: 'herrdic',\r\n    email: 'jherrdic87@gmail.com',\r\n    address: 'Sydney No. 8 Lake Park',\r\n    age: 20\r\n  },\r\n  {\r\n    id: 7,\r\n    username: 'Jeim',\r\n    email: 'joeBlack47745887@gmail.com',\r\n    address: 'Sydney No. 1 Lake Park',\r\n    age: 60\r\n  },\r\n  {\r\n    id: 8,\r\n    username: 'Tim',\r\n    email: 'joeBlack44511887@gmail.com',\r\n    address: 'Sydney No. 5 Lake Park',\r\n    age: 21\r\n  },\r\n  {\r\n    id: 9,\r\n    username: 'Yiemli',\r\n    email: 'joeBlack44555887@gmail.com',\r\n    address: 'Sydney No. 77 Lake Park',\r\n    age: 47\r\n  },\r\n  {\r\n    id: 10,\r\n    username: 'Amy',\r\n    email: 'Amy6655887@gmail.com',\r\n    address: 'Sydney No. 177 Lake Park',\r\n    age: 32\r\n  },\r\n  {\r\n    id: 11,\r\n    username: 'joe',\r\n    email: 'joe55887@gmail.com',\r\n    address: 'Sydney No. 177 Lake Park',\r\n    age: 34\r\n  }\r\n]","import { request } from '../../utils/request'\r\nimport { fakeData, fakeDataType } from './fakeData'\r\n\r\nexport const getUserList = (current: number, pageSize: number) => {\r\n  return request<fakeDataType[]>({\r\n    url: '/getUserList',\r\n    method: 'post',\r\n    data: { current, pageSize }\r\n  }, fakeData)\r\n}\r\n\r\nexport const createUser = (username: string, age: string, email: string, address: string) => {\r\n  return request<number>({\r\n    url: '/createUser',\r\n    method: 'post',\r\n    data: { username, email, age, address }\r\n  }, 4)\r\n}\r\n\r\nexport const getUser = (userId: number) => {\r\n  return request<fakeDataType>({\r\n    url: '/getUser',\r\n    method: 'post',\r\n    data: { userId }\r\n  }, {\r\n    id: 1,\r\n    username: 'admin',\r\n    email: 'admin123@gmail.com',\r\n    address: 'New York No. 1 Lake Park',\r\n    age: 21\r\n  })\r\n}\r\n\r\nexport const updateUser = (userId: number, username: string, age: string, email: string, address: string) => {\r\n  return request<number>({\r\n    url: '/updateUser',\r\n    method: 'post',\r\n    data: { userId, username, age, address }\r\n  }, userId)\r\n}\r\n\r\nexport const deleteUser = (userId: number) => {\r\n  return request<boolean>({\r\n    url: '/deleteUser',\r\n    method: 'post',\r\n    data: { userId }\r\n  }, true)\r\n}","import React from 'react'\r\nimport { Modal, Form, Input, Button, Space, message } from 'antd'\r\nimport { createUser } from '../../api/user'\r\nimport { responseType } from '../../utils/request'\r\n\r\ninterface PropsType {\r\n  isShow: boolean\r\n  setIsShow: (status: boolean) => void\r\n  setGetDataCount: (callback: (oddValue: number) => number) => void\r\n}\r\n\r\ninterface FormType {\r\n  username: string\r\n  age: string\r\n  email: string\r\n  address: string\r\n}\r\n\r\nconst tailLayout = {\r\n  wrapperCol: { offset: 16, span: 8 }\r\n}\r\n\r\nconst Create: React.FC<PropsType> = ({ isShow, setIsShow, setGetDataCount }) => {\r\n  const [createForm] = Form.useForm<FormType>()\r\n\r\n  const onFinish = async (values: FormType) => {\r\n    const { username = '' , age = '', email = '', address = '' } = values\r\n\r\n    await createUser(username, age, email, address).then(response => {\r\n      const { code, msg } = (response as responseType)\r\n      if (code === 200) {\r\n        message.success(msg)\r\n      }\r\n      console.log(response)\r\n    })\r\n    createForm.resetFields()\r\n    setIsShow(false)\r\n    setGetDataCount((oddValue: number) => oddValue + 1)\r\n  }\r\n  \r\n  const onFinishFailed = (errorInfo: any) => {\r\n    console.log('Failed:', errorInfo)\r\n  }\r\n\r\n  const handleCancel = () => {\r\n    setIsShow(false)\r\n  }\r\n\r\n  return  (\r\n    <Modal \r\n      forceRender\r\n      title=\"新增使用者\" \r\n      open={isShow}\r\n      onCancel={handleCancel}\r\n      footer={[]}\r\n    >\r\n      <Form\r\n        name=\"basic\"\r\n        form={createForm}\r\n        labelCol={{ span: 8 }}\r\n        wrapperCol={{ span: 16 }}\r\n        style={{ maxWidth: 600 }}\r\n        initialValues={{ remember: true }}\r\n        onFinish={onFinish}\r\n        onFinishFailed={onFinishFailed}\r\n        autoComplete=\"off\"\r\n      >\r\n        <Form.Item\r\n          label=\"Username\"\r\n          name=\"username\"\r\n          rules={[{ required: true, message: 'Please input your username!' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Age\"\r\n          name=\"age\"\r\n          rules={[{ required: false }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"E-mail\"\r\n          name=\"email\"\r\n          rules={[{ required: false }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Address\"\r\n          name=\"address\"\r\n          rules={[{ required: false }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item {...tailLayout}>\r\n          <Space>\r\n            <Button type=\"default\" htmlType=\"reset\">\r\n              Reset\r\n            </Button>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Space>\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default Create","import React, { useEffect } from 'react'\r\nimport { Modal, Form, Input, Button, Space, message } from 'antd'\r\nimport { updateUser, getUser } from '../../api/user'\r\nimport { responseType } from '../../utils/request'\r\n\r\ninterface PropsType {\r\n  userId: number\r\n  isShow: boolean\r\n  setIsShow: (status: boolean) => void\r\n  setTempId: (tempId: number) => void\r\n  setGetDataCount: (callback: (oddValue: number) => number) => void\r\n}\r\n\r\ninterface FormType {\r\n  username: string\r\n  age: string\r\n  email: string\r\n  address: string\r\n}\r\n\r\nconst tailLayout = {\r\n  wrapperCol: { offset: 16, span: 8 }\r\n}\r\n\r\nconst Create: React.FC<PropsType> = ({ userId, setTempId, isShow, setIsShow, setGetDataCount }) => {\r\n  const [updateForm] = Form.useForm<FormType>()\r\n\r\n  useEffect(() => {\r\n    getUser(userId).then(response => {\r\n      const { data } = (response as responseType)\r\n      const { username, age, email, address } = data as FormType\r\n      updateForm.setFieldsValue({ username, age, email, address })\r\n    })\r\n  }, [userId])\r\n\r\n  const onFinish = async (values: FormType) => {\r\n    const { username = '' , age = '', email = '', address = '' } = values\r\n\r\n    await updateUser(userId, username, age, email, address).then(response => {\r\n      const { code, msg } = (response as responseType)\r\n      if (code === 200) {\r\n        message.success(msg)\r\n      }\r\n      console.log(response)\r\n    })\r\n    updateForm.resetFields()\r\n    setTempId(0)\r\n    setIsShow(false)\r\n    setGetDataCount((oddValue: number) => oddValue + 1)\r\n  }\r\n  \r\n  const onFinishFailed = (errorInfo: any) => {\r\n    console.log('Failed:', errorInfo)\r\n  }\r\n\r\n  const handleCancel = () => {\r\n    setIsShow(false)\r\n  }\r\n\r\n  return  (\r\n    <Modal  \r\n      forceRender\r\n      title=\"新增使用者\" \r\n      open={isShow}\r\n      onCancel={handleCancel}\r\n      footer={[]}\r\n    >\r\n      <Form\r\n        name=\"basic\"\r\n        form={updateForm}\r\n        labelCol={{ span: 8 }}\r\n        wrapperCol={{ span: 16 }}\r\n        style={{ maxWidth: 600 }}\r\n        initialValues={{ remember: true }}\r\n        onFinish={onFinish}\r\n        onFinishFailed={onFinishFailed}\r\n        autoComplete=\"off\"\r\n      >\r\n        <Form.Item\r\n          label=\"Username\"\r\n          name=\"username\"\r\n          rules={[{ required: true, message: 'Please input your username!' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Age\"\r\n          name=\"age\"\r\n          rules={[{ required: false }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"E-mail\"\r\n          name=\"email\"\r\n          rules={[{ required: false }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Address\"\r\n          name=\"address\"\r\n          rules={[{ required: false }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item {...tailLayout}>\r\n          <Space>\r\n            <Button type=\"default\" htmlType=\"reset\">\r\n              Reset\r\n            </Button>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Space>\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default Create","import React, { useEffect, useState } from 'react'\r\nimport { Space, Table, Button, Modal, message } from 'antd'\r\nimport { EditOutlined, DeleteOutlined, UserAddOutlined, ExclamationCircleOutlined } from '@ant-design/icons'\r\nimport type { ColumnsType } from 'antd/es/table'\r\nimport Create from './Create'\r\nimport Update from './Update'\r\n\r\nimport './s_user.scss'\r\nimport { getUserList, deleteUser } from '../../api/user'\r\nimport { responseType } from '../../utils/request'\r\n\r\ninterface DataType {\r\n  key?: React.Key\r\n  id: number\r\n  username: string\r\n  email: string\r\n  address: string\r\n  age: number\r\n}\r\n\r\nconst { confirm } = Modal\r\n\r\nconst User: React.FC = () => {\r\n\r\n  const [ current ] = useState(1)\r\n  const pageSize = 10\r\n\r\n  const [getDataCount, setGetDataCount] = useState(1)\r\n\r\n  const [tableData, setTableData] = useState<DataType[]>([])\r\n\r\n  useEffect(() => {\r\n    getUserList(current, pageSize).then(async response => {\r\n      const { code, data } = (response as responseType)\r\n      if (code === 200) {\r\n        const newValue = data.map((item: DataType) => {\r\n          return {\r\n            ...item,\r\n            key: item.id\r\n          }\r\n        })\r\n        setTableData(()=> [...newValue])\r\n      }\r\n    })\r\n  }, [getDataCount])\r\n\r\n  const [isCreateOpen, setIsCreateOpen] = useState(false)\r\n  const [isUpdateOpen, setIsUpdateOpen] = useState(false)\r\n\r\n  const [tempId, setTempId] = useState(0)\r\n\r\n  const createData = () => {\r\n    setIsCreateOpen(true)\r\n  }\r\n\r\n  const updateData = (record: DataType) => {\r\n    setTempId(record.id)\r\n    setIsUpdateOpen(true)\r\n  }\r\n  const deleteData = (record: DataType) => {\r\n    const { id: userId, username } = record\r\n    confirm({\r\n      icon: <ExclamationCircleOutlined />,\r\n      content: <div>確定刪除 {username}</div>,\r\n      onOk() {\r\n        deleteUser(userId).then(response => {\r\n          const { code, msg } = (response as responseType)\r\n          if (code === 200) {\r\n            message.success(msg)\r\n          }\r\n          console.log(response)\r\n        })\r\n      },\r\n      onCancel() {}\r\n    })\r\n  }\r\n\r\n  const columns: ColumnsType<DataType> = [\r\n    {\r\n      title: 'UserName',\r\n      width: 40,\r\n      dataIndex: 'username',\r\n      key: 'username'\r\n    },\r\n    {\r\n      title: 'Age',\r\n      width: 30,\r\n      dataIndex: 'age',\r\n      key: 'age'\r\n    },\r\n    {\r\n      title: 'E-mail',\r\n      width: 80,\r\n      dataIndex: 'email',\r\n      key: 'email'\r\n    },\r\n    {\r\n      title: 'Address',\r\n      width: 100,\r\n      dataIndex: 'address',\r\n      key: 'address'\r\n    },\r\n    {\r\n      title: 'Action',\r\n      width: 80,\r\n      dataIndex: 'action',\r\n      key: 'action',\r\n      fixed: 'right',\r\n      render: (_: any, record: DataType) => (\r\n        <Space size=\"middle\">\r\n          <Button \r\n            type=\"primary\"\r\n            icon={<EditOutlined />}\r\n            onClick={() => updateData(record)}\r\n          >\r\n            Update\r\n          </Button>\r\n          <Button \r\n            type=\"primary\"\r\n            danger\r\n            icon={<DeleteOutlined />}\r\n            onClick={() => deleteData(record)}\r\n          >\r\n            Delete\r\n          </Button>\r\n        </Space>\r\n      )\r\n    }\r\n  ]\r\n\r\n  return (\r\n    <div className='user-container'>\r\n\r\n      <div className=\"user-new\">\r\n        <Button \r\n          type=\"primary\"\r\n          icon={<UserAddOutlined />}\r\n          onClick={createData}\r\n        >\r\n          Create\r\n        </Button>\r\n      </div>\r\n      <Create \r\n        isShow={isCreateOpen} \r\n        setIsShow={setIsCreateOpen}\r\n        setGetDataCount={setGetDataCount}\r\n      />\r\n      <Update\r\n        userId={tempId}\r\n        setTempId={setTempId}\r\n        isShow={isUpdateOpen} \r\n        setIsShow={setIsUpdateOpen}\r\n        setGetDataCount={setGetDataCount}\r\n      />\r\n    \r\n      <Table \r\n        dataSource={tableData} \r\n        className=\"user-table\" \r\n        columns={columns}\r\n        scroll={{ x: 1000 }}\r\n        pagination={{ pageSize }}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default User","import axios from 'axios'\r\nimport { AxiosResponse, AxiosRequestConfig } from 'axios'\r\n\r\n// enum MSGS {\r\n//   '成功' = 200,\r\n//   '失敗' = 400,\r\n//   '帳密錯誤',\r\n//   '請求異常'\r\n// }\r\n\r\nconst $request = axios.create({\r\n  // test api\r\n  baseURL: 'https://jsonplaceholder.typicode.com',\r\n  timeout: 2000,\r\n  headers: {\r\n    // 'Content-Type': 'application/json'\r\n    'Content-Type': 'application/json;charset=UTF-8',\r\n\r\n    // \"Access-Control-Allow-Origin\": \"*\",\r\n    // 'X-Custom-Header': 'foobar'\r\n    // 'X-Requested-With': 'XMLHttpRequest'\r\n  }\r\n})\r\n\r\n$request.interceptors.request.use(\r\n  (config) => {\r\n    config.headers = config.headers || {}\r\n    if (localStorage.getItem('token')) {\r\n      config.headers.token = localStorage.getItem('token') || ''\r\n    }\r\n    // console.log(config.headers)\r\n    return config\r\n  }, \r\n  (error) => {\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\n$request.interceptors.response.use(\r\n  (response) => {\r\n    const code: number = response.status\r\n\r\n    if(code !== 200) {\r\n      return Promise.reject(response.data)\r\n    }\r\n\r\n    return response\r\n  }, \r\n  (error) => {\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\nexport interface responseType {\r\n  data: any\r\n  code: number\r\n  status: number\r\n  msg: any\r\n}\r\n\r\nconst request = <T>(config: AxiosRequestConfig, fakeData: T, connectApi = false): Promise<{ data: T, code: number } | AxiosResponse> => {\r\n  if(!connectApi) {\r\n    return Promise.resolve({\r\n      data: fakeData,\r\n      code: 200,\r\n      status: 200,\r\n      msg: 'success'\r\n    } as responseType)\r\n  } else {\r\n    return $request(config)\r\n  }\r\n}\r\n\r\nexport { $request, request }\r\n"],"names":["fakeData","id","username","email","address","age","createUser","request","url","method","data","updateUser","userId","tailLayout","wrapperCol","offset","span","isShow","setIsShow","setGetDataCount","Form","createForm","onFinish","values","then","response","code","msg","message","console","log","resetFields","oddValue","forceRender","title","open","onCancel","footer","name","form","labelCol","style","maxWidth","initialValues","remember","onFinishFailed","errorInfo","autoComplete","label","rules","required","type","htmlType","setTempId","updateForm","useEffect","getUser","setFieldsValue","confirm","Modal","useState","current","getDataCount","tableData","setTableData","pageSize","getUserList","newValue","map","item","key","isCreateOpen","setIsCreateOpen","isUpdateOpen","setIsUpdateOpen","tempId","deleteData","record","icon","ExclamationCircleOutlined","content","onOk","deleteUser","columns","width","dataIndex","fixed","render","_","size","EditOutlined","onClick","updateData","danger","DeleteOutlined","className","UserAddOutlined","Update","dataSource","scroll","x","pagination","$request","axios","baseURL","timeout","headers","interceptors","use","config","localStorage","getItem","token","error","Promise","reject","status","connectApi","resolve"],"sourceRoot":""}